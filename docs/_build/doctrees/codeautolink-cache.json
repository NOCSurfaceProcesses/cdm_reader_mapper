{
  "api": [],
  "authors": [],
  "cdm-tables-mapping-files-and-descriptors": [],
  "changes": [],
  "contributing": [],
  "data-models": [],
  "getting-started": [],
  "how-to-build-a-data-model": [],
  "how-to-register-a-new-data-model-mapping": [],
  "how_to_read_csv": [],
  "hyperlinks": [],
  "readme": [
    {
      "source": "import os\n\nos.environ[\"CDM_LOG_FILE\"] = \"log_file.log\"\n\nimport cdm_reader_mapper as cdm",
      "names": [],
      "example": {
        "document": "readme",
        "ref_id": "logging",
        "headings": [
          "Common Data Model reader and mapper: cdm_reader_mapper toolbox",
          "Logging"
        ]
      },
      "doc_lineno": 65
    },
    {
      "source": "import cdm_reader_mapper as cdm\n\ndata = cdm.tests.read_imma1_buoys_nosupp()\n\nimma_data = cdm.read(filepath, data_model=\"imma1\", sections=[\"core\", \"c1\", \"c98\"])\n\ndata_raw = imma_data.data.copy()",
      "names": [],
      "example": {
        "document": "readme",
        "ref_id": "run-a-test",
        "headings": [
          "Common Data Model reader and mapper: cdm_reader_mapper toolbox",
          "Run a test"
        ]
      },
      "doc_lineno": 81
    },
    {
      "source": "name_of_model = \"icoads_r3000_d704\"\n\ncdm_dict = cdm.map_model(\n    name_of_model,\n    data_raw,\n    log_level=\"DEBUG\",\n)",
      "names": [],
      "example": {
        "document": "readme",
        "ref_id": "run-a-test",
        "headings": [
          "Common Data Model reader and mapper: cdm_reader_mapper toolbox",
          "Run a test"
        ]
      },
      "doc_lineno": 94
    }
  ],
  "tool-overview_mapper": [],
  "tool-overview_metmetpy": [],
  "tool-overview_reader": [],
  "example_notebooks\\CLIWOC_datamodel": [
    {
      "source": "from __future__ import annotations\n\nimport json\nimport os\nimport shutil\n\nimport pandas as pd\n\nfrom cdm_reader_mapper import mdf_reader, test_data\n\ntry:\n    from importlib.resources import files as get_files\nexcept ImportError:\n    from importlib_resources import files as get_files\n\nfrom tempfile import TemporaryDirectory",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Creating-a-data-model",
        "headings": [
          "Generating a data model for CLIWOC",
          "Creating a data model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "schema = \"imma1\"\ndata_file_path = test_data.test_063_714[\"source\"]\ndata_raw = mdf_reader.read(data_file_path, data_model=schema)",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Creating-a-data-model",
        "headings": [
          "Generating a data model for CLIWOC",
          "Creating a data model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data[\"c99\"].head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Creating-a-data-model",
        "headings": [
          "Generating a data model for CLIWOC",
          "Creating a data model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data[\"c99\"].iloc[3]",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Creating-a-data-model",
        "headings": [
          "Generating a data model for CLIWOC",
          "Creating a data model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "tmp_dir = TemporaryDirectory()\nmodel_name = \"imma1_d730\"\nmy_model_path = os.path.join(tmp_dir.name, model_name)\nos.mkdir(my_model_path)\n\n# Load schema and save to json file\nschema = mdf_reader.schemas.read_schema(model_name)\njson_object = json.dumps(schema, indent=2)\n\nwith open(os.path.join(my_model_path, model_name + \".json\"), \"w\") as outfile:\n    outfile.write(json_object)\n\n# Get code tables and copy to the directory\ncode_tables_path = get_files(\n    \".\".join([mdf_reader.properties._base, \"code_tables\", \"imma1\"])\n)\nshutil.copytree(code_tables_path, os.path.join(my_model_path, \"code_tables\"))",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Custom-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Custom Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_file_path = test_data.test_133_730[\"source\"]\ndata = mdf_reader.read(data_file_path, data_model_path=my_model_path)",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Custom-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Custom Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data.data[[\"c99_sentinal\"]].head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Custom-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Custom Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data.data[[\"c99_logbook\"]].c99_logbook.describe(include=\"all\")",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Custom-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Custom Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "pd.options.display.max_columns = None\ndata.data[[\"c99_voyage\"]].c99_voyage.describe(include=\"all\")",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Custom-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Custom Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data.data[[\"c99_voyage\"]].c99_voyage.ZeroMeridian.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Custom-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Custom Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data.data[[\"c99_voyage\"]].c99_voyage.Ship_type.dropna().head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Custom-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Custom Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data.data[[\"c99_data\"]].c99_data.describe(include=\"all\")",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Custom-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Custom Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data.data[[\"c99_data\"]].c99_data.wind_force.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Custom-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Custom Schema"
        ]
      },
      "doc_lineno": null
    }
  ],
  "index": [],
  "tool-set-up": []
}
