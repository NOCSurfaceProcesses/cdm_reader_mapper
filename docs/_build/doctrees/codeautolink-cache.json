{
  "api": [],
  "authors": [],
  "cdm-tables-mapping-files-and-descriptors": [],
  "changes": [],
  "contributing": [],
  "data-models": [],
  "example_notebooks\\CDM_mapper_example_deck704": [
    {
      "source": "from __future__ import annotations\n\nimport os\nimport sys\n\nimport pandas as pd\n\nimport cdm_reader_mapper.cdm_mapper as cdm\nfrom cdm_reader_mapper import data, mdf_reader",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Mapping-data-from-ICOADS-deck-704-to-the-Common-Data-Model-(CDM)",
        "headings": [
          "Mapping data from ICOADS deck 704 to the Common Data Model (CDM)"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "schema = \"icoads_r300_d704\"\n\ndata_file_path = data.test_data.test_icoads_r300_d704[\n    \"source\"\n]  # Load the example file from the cdm_reader_mapper test data\ndata_raw = mdf_reader.read(data_file_path, imodel=schema)",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Mapping-data-from-ICOADS-deck-704-to-the-Common-Data-Model-(CDM)",
        "headings": [
          "Mapping data from ICOADS deck 704 to the Common Data Model (CDM)"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data.c99_sentinal.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Mapping-data-from-ICOADS-deck-704-to-the-Common-Data-Model-(CDM)",
        "headings": [
          "Mapping data from ICOADS deck 704 to the Common Data Model (CDM)"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "pd.options.display.max_columns = None\ndata_raw.data.c99_journal.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Mapping-data-from-ICOADS-deck-704-to-the-Common-Data-Model-(CDM)",
        "headings": [
          "Mapping data from ICOADS deck 704 to the Common Data Model (CDM)"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data.c99_voyage.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Mapping-data-from-ICOADS-deck-704-to-the-Common-Data-Model-(CDM)",
        "headings": [
          "Mapping data from ICOADS deck 704 to the Common Data Model (CDM)"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data.c99_daily.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Mapping-data-from-ICOADS-deck-704-to-the-Common-Data-Model-(CDM)",
        "headings": [
          "Mapping data from ICOADS deck 704 to the Common Data Model (CDM)"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data.c99_data4.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Mapping-data-from-ICOADS-deck-704-to-the-Common-Data-Model-(CDM)",
        "headings": [
          "Mapping data from ICOADS deck 704 to the Common Data Model (CDM)"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data.c99_data5.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Mapping-data-from-ICOADS-deck-704-to-the-Common-Data-Model-(CDM)",
        "headings": [
          "Mapping data from ICOADS deck 704 to the Common Data Model (CDM)"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "name_of_model = \"icoads_r300_d704\"\n\ncdm_dict = cdm.map_model(\n    data_raw.data,\n    name_of_model,\n)",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Mapping-data-from-ICOADS-deck-704-to-the-Common-Data-Model-(CDM)",
        "headings": [
          "Mapping data from ICOADS deck 704 to the Common Data Model (CDM)"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data = cdm_dict[\"header\"][\"data\"]\ndata.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Observations-tables",
        "headings": [
          "Mapping data from ICOADS deck 704 to the Common Data Model (CDM)",
          "Observations tables"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data.latitude.head(), data.longitude.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Observations-tables",
        "headings": [
          "Mapping data from ICOADS deck 704 to the Common Data Model (CDM)",
          "Observations tables"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data.c99_daily[\n    [\n        \"lat_deg_on\",\n        \"lat_min_on\",\n        \"lat_hemis_on\",\n        \"lon_deg_of\",\n        \"lon_min_of\",\n        \"lon_hemis_of\",\n    ]\n].head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Observations-tables",
        "headings": [
          "Mapping data from ICOADS deck 704 to the Common Data Model (CDM)",
          "Observations tables"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data.c99_journal[[\"baro_type\", \"baro_height\", \"baro_units\"]].head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Observations-tables",
        "headings": [
          "Mapping data from ICOADS deck 704 to the Common Data Model (CDM)",
          "Observations tables"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_obs = cdm_dict[\"observations-slp\"][\"data\"]\ndata_obs.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Observations-tables",
        "headings": [
          "Mapping data from ICOADS deck 704 to the Common Data Model (CDM)",
          "Observations tables"
        ]
      },
      "doc_lineno": null
    }
  ],
  "example_notebooks\\CLIWOC_datamodel": [
    {
      "source": "from __future__ import annotations\n\nimport glob\nimport json\nimport os\nimport shutil\n\nimport pandas as pd\n\nfrom cdm_reader_mapper import mdf_reader\nfrom cdm_reader_mapper.data import test_data\n\ntry:\n    from importlib.resources import files as get_files\nexcept ImportError:\n    from importlib_resources import files as get_files\n\nfrom collections import OrderedDict\nfrom tempfile import TemporaryDirectory",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Overview",
        "headings": [
          "Generating a data model for CLIWOC",
          "Overview"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_file_path = test_data.test_icoads_r300_d730[\"source\"]",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "The-Data",
        "headings": [
          "Generating a data model for CLIWOC",
          "The Data"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw = mdf_reader.read(data_file_path, imodel=\"icoads\")",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Initial-Read",
        "headings": [
          "Generating a data model for CLIWOC",
          "Initial Read"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data[\"c99\"].head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Supplementary-(c99)-data",
        "headings": [
          "Generating a data model for CLIWOC",
          "Initial Read",
          "Supplementary (c99) data"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data[\"c99\"].iloc[3]",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Supplementary-(c99)-data",
        "headings": [
          "Generating a data model for CLIWOC",
          "Initial Read",
          "Supplementary (c99) data"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "tmp_dir = TemporaryDirectory()\nmy_model_name = \"cliwoc\"\nmy_model_path = os.path.join(tmp_dir.name, my_model_name)\nos.mkdir(my_model_path)\n\n# Get a copy of the \"imma1\" schema\nicoads_schema_path = icoads_code_tables_path = get_files(\n    \".\".join([mdf_reader.properties._base, \"schemas\", \"icoads\"])\n)\nicoads_schema_path = os.path.join(icoads_schema_path, \"icoads.json\")\n\nmy_schema_path = os.path.join(my_model_path, my_model_name + \".json\")\nshutil.copyfile(icoads_schema_path, my_schema_path)",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Copy-the-%22icoads%22-schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Creating a data model",
          "Custom Schema",
          "Copy the \"icoads\" schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "# Get code tables and copy to the directory\nmy_code_tables_path = os.path.join(my_model_path, \"code_tables\")\nos.mkdir(my_code_tables_path)\n\n# Original code table directories (general ICOADS and Deck specific)\nicoads_code_tables_path = get_files(\n    \".\".join([mdf_reader.properties._base, \"codes\", \"icoads\"])\n)\n\n# Get filenames for each of the code tables\ncode_table_files = glob.glob(os.path.join(icoads_code_tables_path, \"ICOADS.*.json\"))\n\n# Copy each file\nfor file in code_table_files:\n    basename = os.path.basename(file)\n    out_path = os.path.join(my_code_tables_path, basename)\n    shutil.copyfile(file, out_path)",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Copy-the-code-tables",
        "headings": [
          "Generating a data model for CLIWOC",
          "Creating a data model",
          "Custom Schema",
          "Copy the code tables"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "with open(my_schema_path) as io:\n    schema = json.load(io, object_pairs_hook=OrderedDict)",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Extending-the-schema:-CLIWOC-logbook-information",
        "headings": [
          "Generating a data model for CLIWOC",
          "Creating a data model",
          "Custom Schema",
          "Extending the schema: CLIWOC logbook information"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "schema[\"sections\"][\"c99\"][\"header\"][\"sentinal\"] = \"99 0 \"\nschema[\"sections\"][\"c99\"][\"header\"][\"disable_read\"] = False\nschema[\"sections\"][\"c99\"][\"header\"][\"field_layout\"] = \"fixed_width\"\nschema[\"sections\"][\"c99\"][\"header\"][\"length\"] = 245 + 5  # Sentinal length\nschema[\"sections\"][\"c99\"][\"elements\"] = OrderedDict(\n    {\n        \"sentinal\": {\n            \"description\": \"attachment sentinal\",\n            \"field_length\": 5,\n            \"column_type\": \"str\",\n            \"ignore\": True,\n        },\n        \"InstAbbr\": {\n            \"description\": \"Abbreviation of the Institute storing the original data\",\n            \"field_length\": 8,\n            \"column_type\": \"str\",\n        },\n        \"InstName\": {\n            \"description\": \"Full name of the Institute storing the original data\",\n            \"field_length\": 50,\n            \"column_type\": \"str\",\n        },\n        \"InstCity\": {\n            \"description\": \"City where the Institute storing the data is located\",\n            \"field_length\": 10,\n            \"column_type\": \"str\",\n        },\n        \"InstCountry\": {\n            \"description\": \"Country where the Institute storing the data is located\",\n            \"field_length\": 14,\n            \"column_type\": \"str\",\n        },\n        \"ArchiveID\": {\n            \"description\": \"Administrative number under which the data is found within the Institute storing the data\",\n            \"field_length\": 15,\n            \"column_type\": \"str\",\n        },\n        \"ArchiveName\": {\n            \"description\": \"Administrative name under which the data is found within the Institute storing the data\",\n            \"field_length\": 17,\n            \"column_type\": \"str\",\n        },\n        \"ArchivePart\": {\n            \"description\": \"Part of the archive set in which the data is found within the Institute storing the data\",\n            \"field_length\": 39,\n            \"column_type\": \"str\",\n        },\n        \"ArchivePartSpec\": {\n            \"description\": \"Specification of the part of the archive set in which the data is found within the Institute storing the data\",\n            \"field_length\": 31,\n            \"column_type\": \"str\",\n        },\n        \"LogbookID\": {\n            \"description\": \"Identificaion Number of the logbook containing the data\",\n            \"field_length\": 30,\n            \"column_type\": \"str\",\n        },\n        \"LogbookLang\": {\n            \"description\": \"Language of the logbook containing the data\",\n            \"field_length\": 7,\n            \"column_type\": \"str\",\n        },\n        \"ImageID\": {\n            \"description\": \"Identificaion Number of the original image of the logbook\",\n            \"field_length\": 23,\n            \"column_type\": \"str\",\n        },\n        \"IllustrationAvail\": {\n            \"description\": \"Illustration available on the current page of the logbook\",\n            \"field_length\": 1,\n            \"column_type\": \"key\",\n            \"codetable\": \"CLIWOC_ILLUSTRATION_I\",\n        },\n    }\n)",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Extending-the-schema:-CLIWOC-logbook-information",
        "headings": [
          "Generating a data model for CLIWOC",
          "Creating a data model",
          "Custom Schema",
          "Extending the schema: CLIWOC logbook information"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "json_object = json.dumps(schema, indent=2)\n\nwith open(my_schema_path, \"w\") as outfile:\n    outfile.write(json_object)",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Extending-the-schema:-CLIWOC-logbook-information",
        "headings": [
          "Generating a data model for CLIWOC",
          "Creating a data model",
          "Custom Schema",
          "Extending the schema: CLIWOC logbook information"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "illustration_avail_codes = {\n    \"0\": \"No illustration on the current logbook page.\",\n    \"1\": \"Illustration available on the current logbook page.\",\n}\nillustration_avail_path = os.path.join(\n    my_code_tables_path, \"CLIWOC_ILLUSTRATION_I.json\"\n)\n\njson_object = json.dumps(illustration_avail_codes, indent=2)\n\nwith open(illustration_avail_path, \"w\") as outfile:\n    outfile.write(json_object)",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "ImageAvail-Code-Table",
        "headings": [
          "Generating a data model for CLIWOC",
          "Creating a data model",
          "Custom Schema",
          "ImageAvail Code Table"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "my_data = mdf_reader.read(\n    data_file_path,  # Path to the data file\n    ext_schema_path=my_model_path,  # Path to the directory containing the schema json file\n    ext_table_path=my_code_tables_path,  # Path to the directory containing the json code tables\n)",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Reading",
        "headings": [
          "Generating a data model for CLIWOC",
          "Creating a data model",
          "Reading"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "my_data.data[[\"c99\"]].head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Analysing-the-output",
        "headings": [
          "Generating a data model for CLIWOC",
          "Creating a data model",
          "Reading",
          "Analysing the output"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "my_data.data[[\"c99\"]].describe(include=\"all\")",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Analysing-the-output",
        "headings": [
          "Generating a data model for CLIWOC",
          "Creating a data model",
          "Reading",
          "Analysing the output"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "all_data = mdf_reader.read(\n    data_file_path,\n    imodel=\"icoads_r300_d730\",\n)",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Internal-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Internal Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "all_data.data[[\"c99_logbook\"]].describe(include=\"all\")",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Internal-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Internal Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "my_data.data[[\"c99\"]].describe(include=\"all\")",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Internal-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Internal Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "pd.options.display.max_columns = None\nall_data.data[[\"c99_voyage\"]].describe(include=\"all\")",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Internal-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Internal Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "all_data.data[[\"c99_voyage\"]].c99_voyage.ZeroMeridian.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Internal-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Internal Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "all_data.data[[\"c99_voyage\"]].c99_voyage.Ship_type.dropna().head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Internal-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Internal Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "all_data.data[[\"c99_data\"]].c99_data.describe(include=\"all\")",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Internal-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Internal Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "all_data.data[[\"c99_data\"]].c99_data.wind_force.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Internal-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Internal Schema"
        ]
      },
      "doc_lineno": null
    }
  ],
  "example_notebooks\\mdf_reader_test_overview": [
    {
      "source": "from __future__ import annotations\n\nimport os\nimport sys\n\nimport pandas as pd\n\nfrom cdm_reader_mapper import mdf_reader\nfrom cdm_reader_mapper.data import test_data",
      "names": [],
      "example": {
        "document": "example_notebooks\\mdf_reader_test_overview",
        "ref_id": "Test-and-overview-of-the-mdf_reader-module",
        "headings": [
          "Test and overview of the mdf_reader module"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_path = test_data.test_icoads_r300_d704[\"source\"]\n\ndata_ori = pd.read_table(data_path)\ndata_ori.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\mdf_reader_test_overview",
        "ref_id": "Test-and-overview-of-the-mdf_reader-module",
        "headings": [
          "Test and overview of the mdf_reader module"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "mdf_reader.properties.supported_data_models",
      "names": [],
      "example": {
        "document": "example_notebooks\\mdf_reader_test_overview",
        "ref_id": "Test-and-overview-of-the-mdf_reader-module",
        "headings": [
          "Test and overview of the mdf_reader module"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "schema = \"icoads_r300_d704\"\n\ndata = mdf_reader.read(data_path, imodel=schema)",
      "names": [],
      "example": {
        "document": "example_notebooks\\mdf_reader_test_overview",
        "ref_id": "Test-and-overview-of-the-mdf_reader-module",
        "headings": [
          "Test and overview of the mdf_reader module"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data.data.c99_journal",
      "names": [],
      "example": {
        "document": "example_notebooks\\mdf_reader_test_overview",
        "ref_id": "Test-and-overview-of-the-mdf_reader-module",
        "headings": [
          "Test and overview of the mdf_reader module"
        ]
      },
      "doc_lineno": null
    }
  ],
  "getting-started": [],
  "how-to-build-a-data-model": [],
  "how-to-register-a-new-data-model-mapping": [],
  "how_to_read_csv": [],
  "hyperlinks": [],
  "index": [],
  "readme": [
    {
      "source": "import os\n\nos.environ[\"CDM_LOG_FILE\"] = \"log_file.log\"\n\nimport cdm_reader_mapper as cdm",
      "names": [],
      "example": {
        "document": "readme",
        "ref_id": "logging",
        "headings": [
          "Common Data Model reader and mapper: cdm_reader_mapper toolbox",
          "Logging"
        ]
      },
      "doc_lineno": 75
    },
    {
      "source": "from cdm_reader_mapper.mdf_reader import read\nfrom cdm_reader_mapper.data import test_data\n\ndata = test_data.test_icoads_r300_d701.get(\"source\")\n\nimma_data = read(\n    filepath, imodel=\"icoads_r300_d701\", sections=[\"core\", \"c1\", \"c98\"]\n)\n\ndata_raw = imma_data.data.copy()",
      "names": [],
      "example": {
        "document": "readme",
        "ref_id": "run-a-test",
        "headings": [
          "Common Data Model reader and mapper: cdm_reader_mapper toolbox",
          "Run a test"
        ]
      },
      "doc_lineno": 91
    },
    {
      "source": "from cdm_reader_mapper.cdm_mapper import map_model\n\nname_of_model = \"icoads_r300_d704\"\n\ncdm_dict = map_model(\n    data_raw,\n    imodel=name_of_model,\n    log_level=\"DEBUG\",\n)",
      "names": [],
      "example": {
        "document": "readme",
        "ref_id": "run-a-test",
        "headings": [
          "Common Data Model reader and mapper: cdm_reader_mapper toolbox",
          "Run a test"
        ]
      },
      "doc_lineno": 107
    }
  ],
  "tool-overview_mapper": [],
  "tool-overview_metmetpy": [],
  "tool-overview_reader": [],
  "tool-set-up": []
}