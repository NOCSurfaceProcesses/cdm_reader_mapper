{
  "api": [],
  "authors": [],
  "cdm-tables-mapping-files-and-descriptors": [],
  "changes": [],
  "contributing": [],
  "data-models": [],
  "example_notebooks\\CDM_mapper_example_deck704": [
    {
      "source": "from __future__ import annotations\n\nimport os\nimport sys\n\nimport pandas as pd\n\nimport cdm_reader_mapper.cdm_mapper as cdm\nfrom cdm_reader_mapper import mdf_reader, test_data",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Mapping-supplemental-data-from-deck-704-to-a-CDM",
        "headings": [
          "Mapping supplemental data from deck 704 to a CDM"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "schema = \"imma1_d704\"\ndata_file_path = test_data.test_125_704[\"source\"]\ndata_raw = mdf_reader.read(data_file_path, data_model=schema)",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Mapping-supplemental-data-from-deck-704-to-a-CDM",
        "headings": [
          "Mapping supplemental data from deck 704 to a CDM"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data.c99_sentinal.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Mapping-supplemental-data-from-deck-704-to-a-CDM",
        "headings": [
          "Mapping supplemental data from deck 704 to a CDM"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "pd.options.display.max_columns = None\ndata_raw.data.c99_journal.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Mapping-supplemental-data-from-deck-704-to-a-CDM",
        "headings": [
          "Mapping supplemental data from deck 704 to a CDM"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data.c99_voyage.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Mapping-supplemental-data-from-deck-704-to-a-CDM",
        "headings": [
          "Mapping supplemental data from deck 704 to a CDM"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data.c99_daily.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Mapping-supplemental-data-from-deck-704-to-a-CDM",
        "headings": [
          "Mapping supplemental data from deck 704 to a CDM"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data.c99_data4.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Mapping-supplemental-data-from-deck-704-to-a-CDM",
        "headings": [
          "Mapping supplemental data from deck 704 to a CDM"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data.c99_data5.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Mapping-supplemental-data-from-deck-704-to-a-CDM",
        "headings": [
          "Mapping supplemental data from deck 704 to a CDM"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "help(cdm.map_model)",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Mapping-supplemental-data-from-deck-704-to-a-CDM",
        "headings": [
          "Mapping supplemental data from deck 704 to a CDM"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "name_of_model = \"icoads_r3000_d704\"\n\ncdm_dict = cdm.map_model(\n    name_of_model,\n    data_raw.data,\n)",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Mapping-supplemental-data-from-deck-704-to-a-CDM",
        "headings": [
          "Mapping supplemental data from deck 704 to a CDM"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data = cdm_dict[\"header\"][\"data\"]\ndata.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Observations-tables",
        "headings": [
          "Mapping supplemental data from deck 704 to a CDM",
          "Observations tables"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data.latitude.head(), data.longitude.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Observations-tables",
        "headings": [
          "Mapping supplemental data from deck 704 to a CDM",
          "Observations tables"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data.c99_daily[\n    [\n        \"lat_deg_on\",\n        \"lat_min_on\",\n        \"lat_hemis_on\",\n        \"lon_deg_of\",\n        \"lon_min_of\",\n        \"lon_hemis_of\",\n    ]\n].head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Observations-tables",
        "headings": [
          "Mapping supplemental data from deck 704 to a CDM",
          "Observations tables"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data.c99_journal[[\"baro_type\", \"baro_height\", \"baro_units\"]].head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Observations-tables",
        "headings": [
          "Mapping supplemental data from deck 704 to a CDM",
          "Observations tables"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_obs = cdm_dict[\"observations-slp\"][\"data\"]\ndata_obs.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CDM_mapper_example_deck704",
        "ref_id": "Observations-tables",
        "headings": [
          "Mapping supplemental data from deck 704 to a CDM",
          "Observations tables"
        ]
      },
      "doc_lineno": null
    }
  ],
  "example_notebooks\\CLIWOC_datamodel": [
    {
      "source": "from __future__ import annotations\n\nimport json\nimport os\nimport shutil\n\nimport pandas as pd\n\nfrom cdm_reader_mapper import mdf_reader, test_data\n\ntry:\n    from importlib.resources import files as get_files\nexcept ImportError:\n    from importlib_resources import files as get_files\n\nfrom tempfile import TemporaryDirectory",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Creating-a-data-model",
        "headings": [
          "Generating a data model for CLIWOC",
          "Creating a data model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "schema = \"imma1\"\ndata_file_path = test_data.test_063_714[\"source\"]\ndata_raw = mdf_reader.read(data_file_path, data_model=schema)",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Creating-a-data-model",
        "headings": [
          "Generating a data model for CLIWOC",
          "Creating a data model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data[\"c99\"].head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Creating-a-data-model",
        "headings": [
          "Generating a data model for CLIWOC",
          "Creating a data model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "line = data_raw.data[\"c99\"].iloc[3]\nline",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Creating-a-data-model",
        "headings": [
          "Generating a data model for CLIWOC",
          "Creating a data model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "tmp_dir = TemporaryDirectory()\nmodel_name = \"imma1_d730\"\nmy_model_path = os.path.join(tmp_dir.name, model_name)\nos.mkdir(my_model_path)\n\n# Load schema and save to json file\nschema = mdf_reader.schemas.read_schema(model_name)\njson_object = json.dumps(schema, indent=2)\n\nwith open(os.path.join(my_model_path, model_name + \".json\"), \"w\") as outfile:\n    outfile.write(json_object)\n\n# Get code tables and copy to the directory\ncode_tables_path = get_files(\n    \".\".join([mdf_reader.properties._base, \"code_tables\", \"imma1\"])\n)\nshutil.copytree(code_tables_path, os.path.join(my_model_path, \"code_tables\"))",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Custom-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Custom Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_file_path = test_data.test_133_730[\"source\"]\ndata = mdf_reader.read(data_file_path, data_model_path=my_model_path)",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Custom-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Custom Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data.data[[\"c99_sentinal\"]].head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Custom-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Custom Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data.data[[\"c99_logbook\"]].c99_logbook.describe(include=\"all\")",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Custom-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Custom Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "pd.options.display.max_columns = None\ndata.data[[\"c99_voyage\"]].c99_voyage.describe(include=\"all\")",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Custom-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Custom Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data.data[[\"c99_voyage\"]].c99_voyage.ZeroMeridian.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Custom-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Custom Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data.data[[\"c99_voyage\"]].c99_voyage.Ship_type.dropna().head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Custom-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Custom Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data.data[[\"c99_data\"]].c99_data.describe(include=\"all\")",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Custom-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Custom Schema"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data.data[[\"c99_data\"]].c99_data.wind_force.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\CLIWOC_datamodel",
        "ref_id": "Custom-Schema",
        "headings": [
          "Generating a data model for CLIWOC",
          "Custom Schema"
        ]
      },
      "doc_lineno": null
    }
  ],
  "example_notebooks\\create_data_model": [
    {
      "source": "from __future__ import annotations\n\nimport json\nimport os\nimport shutil\nimport sys\n\nimport pandas as pd\n\npd.options.display.max_columns = None\n\nfrom collections import OrderedDict\nfrom tempfile import TemporaryDirectory\n\ntry:\n    from importlib.resources import files as get_files\nexcept ImportError:\n    from importlib_resources import files as get_files\n\nfrom cdm_reader_mapper import mdf_reader, test_data",
      "names": [],
      "example": {
        "document": "example_notebooks\\create_data_model",
        "ref_id": "Creating-a-data-model",
        "headings": [
          "How to create a data model",
          "Creating a data model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "mdf_reader.properties.supported_data_models",
      "names": [],
      "example": {
        "document": "example_notebooks\\create_data_model",
        "ref_id": "Creating-a-data-model",
        "headings": [
          "How to create a data model",
          "Creating a data model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "# Load the test data\ndata = test_data.test_069_701\n\ndata_raw = mdf_reader.read(data.get(\"source\"), data_model=\"imma1\")",
      "names": [],
      "example": {
        "document": "example_notebooks\\create_data_model",
        "ref_id": "Creating-a-data-model",
        "headings": [
          "How to create a data model",
          "Creating a data model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_raw.data[\"c99\"]",
      "names": [],
      "example": {
        "document": "example_notebooks\\create_data_model",
        "ref_id": "Creating-a-data-model",
        "headings": [
          "How to create a data model",
          "Creating a data model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "# Get a copy of the \"imma1\" schema\nschema: OrderedDict = mdf_reader.schemas.read_schema(schema_name=\"imma1\")",
      "names": [],
      "example": {
        "document": "example_notebooks\\create_data_model",
        "ref_id": "Creating-a-data-model",
        "headings": [
          "How to create a data model",
          "Creating a data model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "# Create the directory where we store the schema\nmy_model_name = \"imma1_d701\"\ntmp_dir = TemporaryDirectory()\nmy_model_path = os.path.join(tmp_dir.name, my_model_name)\nos.mkdir(my_model_path)\nprint(my_model_path)",
      "names": [],
      "example": {
        "document": "example_notebooks\\create_data_model",
        "ref_id": "Creating-a-data-model",
        "headings": [
          "How to create a data model",
          "Creating a data model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "c99 = data_raw.data[\"c99\"]\nline = c99.iloc[2]",
      "names": [],
      "example": {
        "document": "example_notebooks\\create_data_model",
        "ref_id": "Creating-a-data-model",
        "headings": [
          "How to create a data model",
          "Creating a data model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "# sentinal = 5\npart_1 = line[0:5]\npart_1",
      "names": [],
      "example": {
        "document": "example_notebooks\\create_data_model",
        "ref_id": "Creating-a-data-model",
        "headings": [
          "How to create a data model",
          "Creating a data model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "# cvoyd voyage number = 7\npart_2 = line[5 : 5 + 7]\npart_2",
      "names": [],
      "example": {
        "document": "example_notebooks\\create_data_model",
        "ref_id": "Creating-a-data-model",
        "headings": [
          "How to create a data model",
          "Creating a data model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "# date = 10\npart_3 = line[12 : 12 + 10]\npart_3",
      "names": [],
      "example": {
        "document": "example_notebooks\\create_data_model",
        "ref_id": "Creating-a-data-model",
        "headings": [
          "How to create a data model",
          "Creating a data model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "schema[\"sections\"][\"c99\"][\"header\"][\"sentinal\"] = \"99 0 \"\nschema[\"sections\"][\"c99\"][\"header\"][\"disable_read\"] = False\nschema[\"sections\"][\"c99\"][\"header\"][\"field_layout\"] = \"fixed_width\"\nschema[\"sections\"][\"c99\"][\"header\"][\"length\"] = 250 + 5  # Sentinal length\nschema[\"sections\"][\"c99\"][\"elements\"] = OrderedDict(\n    {\n        \"sentinal\": {\n            \"description\": \"attachment sentinal\",\n            \"field_length\": 5,\n            \"column_type\": \"str\",\n        },\n        \"cvoyd\": {\n            \"description\": \"Voyage Information\",\n            \"field_length\": 7,\n            \"column_type\": \"str\",\n        },\n        \"year\": {\n            \"description\": \"Year\",\n            \"field_length\": 4,\n            \"column_type\": \"uint16\",\n        },\n        \"month\": {\n            \"description\": \"Month\",\n            \"field_length\": 2,\n            \"column_type\": \"uint8\",\n        },\n        \"day\": {\n            \"description\": \"Day\",\n            \"field_length\": 2,\n            \"column_type\": \"uint8\",\n        },\n        \"rest\": {\n            \"description\": \"Remaining c99 string\",\n            \"field_length\": 235,  # 250 - (8 + 7)\n            \"column_type\": \"str\",\n        },\n    }\n)",
      "names": [],
      "example": {
        "document": "example_notebooks\\create_data_model",
        "ref_id": "Create-the-custom-model",
        "headings": [
          "How to create a data model",
          "Create the custom model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "json_object = json.dumps(schema, indent=2)\n\nwith open(os.path.join(my_model_path, my_model_name + \".json\"), \"w\") as outfile:\n    outfile.write(json_object)",
      "names": [],
      "example": {
        "document": "example_notebooks\\create_data_model",
        "ref_id": "Create-the-custom-model",
        "headings": [
          "How to create a data model",
          "Create the custom model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "code_tables_path = get_files(\n    \".\".join([mdf_reader.properties._base, \"code_tables\", \"imma1\"])\n)\nshutil.copytree(code_tables_path, os.path.join(my_model_path, \"code_tables\"))",
      "names": [],
      "example": {
        "document": "example_notebooks\\create_data_model",
        "ref_id": "Create-the-custom-model",
        "headings": [
          "How to create a data model",
          "Create the custom model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_new = mdf_reader.read(data.get(\"source\"), data_model_path=my_model_path)",
      "names": [],
      "example": {
        "document": "example_notebooks\\create_data_model",
        "ref_id": "Create-the-custom-model",
        "headings": [
          "How to create a data model",
          "Create the custom model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_new.data[\"c99\"]",
      "names": [],
      "example": {
        "document": "example_notebooks\\create_data_model",
        "ref_id": "Create-the-custom-model",
        "headings": [
          "How to create a data model",
          "Create the custom model"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "for c in data_new.data[\"core\"].columns:\n    assert data_new.data[\"core\"][c].equals(data_raw.data[(\"core\", c)])",
      "names": [],
      "example": {
        "document": "example_notebooks\\create_data_model",
        "ref_id": "Create-the-custom-model",
        "headings": [
          "How to create a data model",
          "Create the custom model"
        ]
      },
      "doc_lineno": null
    }
  ],
  "example_notebooks\\mdf_reader_test_overview": [
    {
      "source": "from __future__ import annotations\n\nimport os\nimport sys\n\nimport pandas as pd\n\nfrom cdm_reader_mapper import mdf_reader, test_data",
      "names": [],
      "example": {
        "document": "example_notebooks\\mdf_reader_test_overview",
        "ref_id": "Test-and-overview-of-the-mdf_reader-module",
        "headings": [
          "Test and overview of the mdf_reader module"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data_path = test_data.test_125_704[\"source\"]\n\ndata_ori = pd.read_table(data_path)\ndata_ori.head()",
      "names": [],
      "example": {
        "document": "example_notebooks\\mdf_reader_test_overview",
        "ref_id": "Test-and-overview-of-the-mdf_reader-module",
        "headings": [
          "Test and overview of the mdf_reader module"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "mdf_reader.properties.supported_data_models",
      "names": [],
      "example": {
        "document": "example_notebooks\\mdf_reader_test_overview",
        "ref_id": "Test-and-overview-of-the-mdf_reader-module",
        "headings": [
          "Test and overview of the mdf_reader module"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "schema = \"imma1_d704\"\n\ndata = mdf_reader.read(data_path, data_model=schema)",
      "names": [],
      "example": {
        "document": "example_notebooks\\mdf_reader_test_overview",
        "ref_id": "Test-and-overview-of-the-mdf_reader-module",
        "headings": [
          "Test and overview of the mdf_reader module"
        ]
      },
      "doc_lineno": null
    },
    {
      "source": "data.data.c99_journal",
      "names": [],
      "example": {
        "document": "example_notebooks\\mdf_reader_test_overview",
        "ref_id": "Test-and-overview-of-the-mdf_reader-module",
        "headings": [
          "Test and overview of the mdf_reader module"
        ]
      },
      "doc_lineno": null
    }
  ],
  "getting-started": [],
  "how-to-build-a-data-model": [],
  "how-to-register-a-new-data-model-mapping": [],
  "how_to_read_csv": [],
  "hyperlinks": [],
  "index": [],
  "readme": [
    {
      "source": "import os\n\nos.environ[\"CDM_LOG_FILE\"] = \"log_file.log\"\n\nimport cdm_reader_mapper as cdm",
      "names": [],
      "example": {
        "document": "readme",
        "ref_id": "logging",
        "headings": [
          "Common Data Model reader and mapper: cdm_reader_mapper toolbox",
          "Logging"
        ]
      },
      "doc_lineno": 65
    },
    {
      "source": "import cdm_reader_mapper as cdm\n\ndata = cdm.tests.read_imma1_buoys_nosupp()\n\nimma_data = cdm.read(filepath, data_model=\"imma1\", sections=[\"core\", \"c1\", \"c98\"])\n\ndata_raw = imma_data.data.copy()",
      "names": [],
      "example": {
        "document": "readme",
        "ref_id": "run-a-test",
        "headings": [
          "Common Data Model reader and mapper: cdm_reader_mapper toolbox",
          "Run a test"
        ]
      },
      "doc_lineno": 81
    },
    {
      "source": "name_of_model = \"icoads_r3000_d704\"\n\ncdm_dict = cdm.map_model(\n    name_of_model,\n    data_raw,\n    log_level=\"DEBUG\",\n)",
      "names": [],
      "example": {
        "document": "readme",
        "ref_id": "run-a-test",
        "headings": [
          "Common Data Model reader and mapper: cdm_reader_mapper toolbox",
          "Run a test"
        ]
      },
      "doc_lineno": 94
    }
  ],
  "tool-overview_mapper": [],
  "tool-overview_metmetpy": [],
  "tool-overview_reader": [],
  "tool-set-up": []
}